{"files":[{"id":"a9421810-bd1a-41bb-8df4-f2ce3df98b9b","name":"appsscript","type":"json","source":"{\n  \"timeZone\": \"Europe/London\",\n  \"dependencies\": {\n    \"enabledAdvancedServices\": [\n      {\n        \"userSymbol\": \"Tasks\",\n        \"serviceId\": \"tasks\",\n        \"version\": \"v1\"\n      },\n      {\n        \"userSymbol\": \"Calendar\",\n        \"serviceId\": \"calendar\",\n        \"version\": \"v3\"\n      }\n    ]\n  },\n  \"exceptionLogging\": \"STACKDRIVER\",\n  \"runtimeVersion\": \"V8\",\n  \"webapp\": {\n    \"executeAs\": \"USER_DEPLOYING\",\n    \"access\": \"MYSELF\"\n  }\n}"},{"id":"209c214e-0a7c-4246-82d6-70acbbd1d165","name":"Code","type":"server_js","source":"/**\n * Lists tasks titles and IDs.\n */\nfunction updateTasks() {\n  var taskLists \u003d Tasks.Tasklists.list();\n  if (taskLists.items) {\n    for (let taskList of taskLists.items) {\n      Logger.log(\u0027Updating list %s\u0027, taskList.title)\n      updateTaskList(taskList.id);\n    }\n  } else {\n    Logger.log(\u0027No task lists found.\u0027);\n  }\n}\n\n/**\n */\nfunction updateTaskList(taskListId) {\n  const nowDate \u003d new Date(new Date().toDateString());\n  const tasks \u003d Tasks.Tasks.list(taskListId);\n\n  if (tasks.items) {\n    for (let task of tasks.items) {\n      const taskDate \u003d new Date(task.due);\n      if (task.status  \u003d\u003d\u003d \u0027needsAction\u0027 \u0026\u0026 nowDate \u003e taskDate) {\n        Logger.log(\u0027\\tUpdating task %s from %s to %s\u0027, task.title, taskDate, nowDate)\n        task.due \u003d nowDate.toISOString();\n        Tasks.Tasks.update(task, taskListId, task.id);\n      }\n    }\n  }\n\n}\n"},{"id":"803c495c-fa4d-4480-b6fe-d6465fbc05f5","name":"Drafts","type":"server_js","source":"/**\n * Lists tasks titles and IDs.\n */\nfunction listTasks() {\n  const taskLists \u003d Tasks.Tasklists.list();\n  if (taskLists.items) {\n    for (let taskList of taskLists.items) {\n      Logger.log(\u0027List %s\u0027, taskList.title);\n      const tasks \u003d Tasks.Tasks.list(taskList.id);\n      if (tasks.items) {\n        for (let task of tasks.items) {\n          Logger.log(\u0027\\t%s\u0027, JSON.stringify(task, null, 2)); // spacing level \u003d 2\n        }\n      }\n\n    }\n  } else {\n    Logger.log(\u0027No task lists found.\u0027);\n  }\n}"}]}